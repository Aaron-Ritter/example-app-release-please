name: Release

on:
  push:
    branches: ["main"]
  workflow_run:
    workflows: ["GitHub Actions Debug","GitHub Actions Debug2"] # Name of GitHub workflow to trigger in target repository
    types:
      - completed

# The different jobs of this workflow need the following permissions
permissions:
  # The release-please-action requires these permissions to create a github release
  contents: write
  # The release-please-action requires these permissions to create and modify pull requests
  pull-requests: write
  # The release-please-action requires these permissions to read pull request labels
  repository-projects: read
  # This workflow calls and imports multiple other workflows and actions. T
  # It is only required for workflows in private repositories
  actions: write
  # The release workflow calls multiple code quality and security workflows which create security output
  security-events: write
  # This is required to fetch internal or private CodeQL packs
  packages: read

concurrency:
  group: release

jobs:
  prerelease-prep:
    name: Create Prerelease Pull Request
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - id: release
        name: Run prerelease release-please
        uses: googleapis/release-please-action@v4
        with:
          config-file: ".github/prerelease-config.json"
          manifest-file: ".github/prerelease-manifest.json"

  prerelease-test:
    name: Run Prerelease Tests
    runs-on: ubuntu-latest
    if: ${{ needs.prerelease-prep.outputs.releases_created == 'false' }}
    needs: prerelease-prep
    steps:
      - name: Release Build Push Deploy
        run: |
          echo "Prerelease Tests"

  prerelease:
    name: Create Prerelease and Release Pull Request
    runs-on: ubuntu-latest
    if: ${{ needs.prerelease-prep.outputs.releases_created == 'true' && contains(needs.prerelease-prep.outputs.tag_name, 'rc') }}
    needs: prerelease-prep
    steps:
      - name: Pre Release Step
        run: |
          echo "Running pre-release step!"

      - name: Run release release-please
        uses: googleapis/release-please-action@v4
        with:
          config-file: ".github/release-config.json"
          manifest-file: ".github/release-manifest.json"

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ needs.prerelease-prep.outputs.releases_created == 'true' && !contains(needs.prerelease-prep.outputs.tag_name, 'rc') }}
    needs: prerelease-prep
    steps:
      - name: Release Step
        run: |
          echo "Running release step!"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Sync prerelease manifest
        env:
          MANIFEST_PATH: .github/prerelease-manifest.json
          RELEASE_TAG: ${{ needs.prerelease-prep.outputs.tag_name }}
        run: |
          jq --arg tag "${RELEASE_TAG//v/}" '.["."] = $tag' $MANIFEST_PATH > temp.json \
            && mv temp.json $MANIFEST_PATH

      - name: Commit change
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add . $MANIFEST_PATH
          git commit -m "chore: sync release manifests"
          git push

  post-release:
    name: Post Release Steps
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Post Release Step
        run: |
          echo "Running post-release steps!"
